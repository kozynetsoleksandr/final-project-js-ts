(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))r(t);new MutationObserver(t=>{for(const n of t)if(n.type==="childList")for(const c of n.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&r(c)}).observe(document,{childList:!0,subtree:!0});function s(t){const n={};return t.integrity&&(n.integrity=t.integrity),t.referrerPolicy&&(n.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?n.credentials="include":t.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function r(t){if(t.ep)return;t.ep=!0;const n=s(t);fetch(t.href,n)}})();class a{_title;_minMaxPlayers=[];_age=0;_rating=[];_genre=[];constructor(e){this._title=e}get Title(){return this._title}set Title(e){if(e.trim().length===0)throw new Error("Title cannot be empty");this._title=e}get Age(){return this._age}set Age(e){if(e<0)throw new Error("Age must be positive");this._age=e}get MinMaxPlayers(){return this._minMaxPlayers}set MinMaxPlayers(e){if(e.length!==2)throw new Error("minMaxPlayers must have [min, max]");this._minMaxPlayers=e}get Rating(){return this._rating}get Genre(){return this._genre}getFullInfo(){return`
            Title: ${this._title}
            Age: ${this._age}
            Players: ${this._minMaxPlayers.join(" - ")}
            Genres: ${this._genre.join(", ")}
            Average Rating: ${this.countRating()}
        `}setMyRating(e){this._rating.push(e)}fillData(e,s,r){this._minMaxPlayers=e,this._age=s,this._genre=r}addGenre(e){this._genre.push(e)}countRating(){return this._rating.length===0?0:this._rating.reduce((e,s)=>e+s,0)/this._rating.length}}class g extends a{_content;_baseGame;constructor(e,s,r){super(e),this._baseGame=s,this._content=r}get Content(){return this._content}set Content(e){this._content=e}getBaseGameName(){return this._baseGame.Title}}class m{_collectionName;_gameList=[];constructor(e){this._collectionName=e}get CollectionName(){return this._collectionName}get GameList(){return this._gameList}addItem(e){this._gameList.push(e)}isInCollection(e){return this._gameList.includes(e)}countList(){return this._gameList.length}countBaseGames(){return this._gameList.filter(e=>e instanceof a&&!(e instanceof g)).length}countExpansions(){return this._gameList.filter(e=>e instanceof g).length}}const o=new a("Catan");o.fillData([3,4],10,["Strategy"]);o.setMyRating(5);o.setMyRating(4);const u=new a("Carcassonne");u.fillData([2,5],8,["Tile-laying"]);u.setMyRating(4);const h=new g("Seafarers",o,"Adds ships and exploration"),i=new m("My Board Games");i.addItem(o);i.addItem(u);i.addItem(h);console.log("Collection name:",i.CollectionName);console.log("Total items:",i.countList());console.log("Base games:",i.countBaseGames());console.log("Expansions:",i.countExpansions());console.log("Expansion belongs to:",h.getBaseGameName());
